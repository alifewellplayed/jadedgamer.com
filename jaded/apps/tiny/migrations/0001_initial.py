# Generated by Django 3.0.8 on 2020-07-23 22:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Company",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
                ("website", models.URLField(blank=True, null=True)),
                ("founded", models.DateTimeField(blank=True, null=True)),
                ("location_country", models.CharField(blank=True, max_length=255, null=True)),
                ("location_state", models.CharField(blank=True, max_length=255, null=True)),
                ("date_added", models.DateTimeField(blank=True, null=True)),
                ("date_last_updated", models.DateTimeField(blank=True, null=True)),
                ("guid", models.CharField(max_length=32, unique=True)),
            ],
            options={"verbose_name_plural": "Companies", "db_table": "tiny_companies",},
        ),
        migrations.CreateModel(
            name="Concept",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255)),
                ("date_added", models.DateTimeField(blank=True, null=True)),
                ("date_last_updated", models.DateTimeField(blank=True, null=True)),
                ("guid", models.CharField(max_length=32, unique=True)),
            ],
            options={"db_table": "tiny_concepts",},
        ),
        migrations.CreateModel(
            name="Franchise",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255)),
                ("date_added", models.DateTimeField(blank=True, null=True)),
                ("date_last_updated", models.DateTimeField(blank=True, null=True)),
                ("guid", models.CharField(max_length=32, unique=True)),
            ],
            options={"db_table": "tiny_franchises",},
        ),
        migrations.CreateModel(
            name="Game",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(blank=True, max_length=255)),
                ("release_date", models.DateTimeField(blank=True, null=True)),
                ("expected_release_month", models.CharField(blank=True, max_length=255, null=True)),
                ("expected_release_year", models.CharField(blank=True, max_length=255, null=True)),
                ("date_added", models.DateTimeField(blank=True, null=True)),
                ("date_last_updated", models.DateTimeField(blank=True, null=True)),
                ("guid", models.CharField(db_index=True, max_length=32, unique=True)),
                (
                    "developers",
                    models.ManyToManyField(
                        blank=True, related_name="developers", to="tiny.Company", verbose_name="Developers involved."
                    ),
                ),
                ("franchises", models.ManyToManyField(blank=True, to="tiny.Franchise", verbose_name="Franchises")),
            ],
            options={"db_table": "tiny_games",},
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255)),
                ("date_added", models.DateTimeField(blank=True, null=True)),
                ("date_last_updated", models.DateTimeField(blank=True, null=True)),
                ("guid", models.CharField(max_length=32, unique=True)),
            ],
            options={"db_table": "tiny_genres",},
        ),
        migrations.CreateModel(
            name="Platform",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255)),
                ("abbreviation", models.CharField(blank=True, max_length=25, null=True)),
                ("original_price", models.IntegerField(blank=True, null=True)),
                ("release_date", models.DateTimeField(blank=True, null=True)),
                ("install_base", models.IntegerField(blank=True, null=True)),
                ("online_support", models.BooleanField()),
                ("date_added", models.DateTimeField(blank=True, null=True)),
                ("date_last_updated", models.DateTimeField(blank=True, null=True)),
                ("guid", models.CharField(max_length=32, unique=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="tiny.Company"
                    ),
                ),
            ],
            options={"db_table": "tiny_platforms",},
        ),
        migrations.CreateModel(
            name="Rating",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255)),
                ("rating_board", models.CharField(max_length=255)),
                ("date_added", models.DateTimeField(blank=True, null=True)),
                ("date_last_updated", models.DateTimeField(blank=True, null=True)),
                ("guid", models.CharField(max_length=32, unique=True)),
            ],
            options={"db_table": "tiny_ratings",},
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255)),
                ("date_added", models.DateTimeField(blank=True, null=True)),
                ("date_last_updated", models.DateTimeField(blank=True, null=True)),
                ("guid", models.CharField(max_length=32, unique=True)),
            ],
            options={"db_table": "tiny_regions",},
        ),
        migrations.CreateModel(
            name="Theme",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255)),
                ("date_added", models.DateTimeField(blank=True, null=True)),
                ("date_last_updated", models.DateTimeField(blank=True, null=True)),
                ("guid", models.CharField(max_length=32, unique=True)),
            ],
            options={"db_table": "tiny_themes",},
        ),
        migrations.CreateModel(
            name="Release",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(blank=True, max_length=255)),
                ("release_date", models.DateTimeField(blank=True, null=True)),
                ("expected_release_month", models.CharField(blank=True, max_length=255, null=True)),
                ("expected_release_year", models.CharField(blank=True, max_length=255, null=True)),
                ("date_added", models.DateTimeField(blank=True, null=True)),
                ("date_last_updated", models.DateTimeField(blank=True, null=True)),
                ("guid", models.CharField(db_index=True, max_length=32, unique=True)),
                ("game", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="tiny.Game")),
                (
                    "game_rating",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="tiny.Rating"
                    ),
                ),
                ("platform", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="tiny.Platform")),
                (
                    "region",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="tiny.Region"
                    ),
                ),
            ],
            options={"db_table": "tiny_releases",},
        ),
        migrations.AddField(
            model_name="game",
            name="genres",
            field=models.ManyToManyField(blank=True, to="tiny.Genre", verbose_name="Genres used"),
        ),
        migrations.AddField(
            model_name="game",
            name="platforms",
            field=models.ManyToManyField(blank=True, to="tiny.Platform", verbose_name="Platforms released to."),
        ),
        migrations.AddField(
            model_name="game",
            name="publishers",
            field=models.ManyToManyField(
                blank=True, related_name="publishers", to="tiny.Company", verbose_name="Companies involved."
            ),
        ),
        migrations.AddField(
            model_name="game",
            name="rating",
            field=models.ManyToManyField(blank=True, to="tiny.Rating", verbose_name="Ratings"),
        ),
        migrations.AddField(
            model_name="game",
            name="themes",
            field=models.ManyToManyField(blank=True, to="tiny.Theme", verbose_name="Themes used"),
        ),
    ]
